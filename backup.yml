name: Backup WordPress to Repo

on:
  schedule:
    - cron: '0 2 * * *'  # daily at 02:00 UTC
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest
    env:
      DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_KEY: ${{ secrets.SSH_KEY }}
      BACKUP_DIR: /tmp/wp_backup

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${SSH_HOST}" >> ~/.ssh/known_hosts

      - name: Create backup on server
        run: |
          ssh "${SSH_USER}@${SSH_HOST}" << 'EOF'
          mkdir -p "${BACKUP_DIR}"
          mysqldump -uroot wordpress_db > "${BACKUP_DIR}/db.sql"
          tar -czf "${BACKUP_DIR}/files.tar.gz" -C /www/wwwroot/${DOMAIN_NAME} .
          EOF

      - name: Copy backup to runner
        run: |
          mkdir -p backup
          scp "${SSH_USER}@${SSH_HOST}:${BACKUP_DIR}/db.sql" backup/
          scp "${SSH_USER}@${SSH_HOST}:${BACKUP_DIR}/files.tar.gz" backup/

      - name: Commit & push backups
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          cp backup/* .
          git add *.sql *.tar.gz
          git commit -m "Auto-backup: $(date -u +"%Y-%m-%d")" || exit 0
          git push
